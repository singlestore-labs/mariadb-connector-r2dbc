---
name: Run CI Tests

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    # Run weekly on Sundays at 00:00 UTC
    - cron: '0 0 * * 0'

env:
  TEST_DB_HOST: 127.0.0.1
  TEST_DB_PORT: 5506
  TEST_DB_USER: root
  TEST_DB_PASSWORD: ${{ secrets.SINGLESTORE_PASSWORD }}
  TEST_DB_DATABASE: testr2

jobs:
  fetch-s2-versions:
    runs-on: ubuntu-latest
    outputs:
      versions: ${{ steps.get_versions.outputs.versions }}
    steps:
      - name: Get supported versions of Singlestore
        id: get_versions
        uses: singlestore-labs/singlestore-supported-versions@main

  test:
    needs: fetch-s2-versions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        singlestore_version: ${{ fromJson(needs.fetch-s2-versions.outputs.versions) }}
        java: ["8", "11", "17"]

    steps:
      - name: Free Disk Space
        run: |
          echo "=== BEFORE ==="
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo rm -rf /opt/hostedtoolcache/Ruby
          sudo rm -rf /opt/hostedtoolcache/Go
          docker system prune -af || true
          sudo apt-get clean
          echo "=== AFTER ==="
          df -h

      - uses: actions/checkout@v4

      - name: Setup SingleStore Cluster
        env:
          SINGLESTORE_LICENSE: ${{ secrets.SINGLESTORE_LICENSE }}
          ROOT_PASSWORD: ${{ secrets.SINGLESTORE_PASSWORD }}
          SINGLESTORE_VERSION: ${{ matrix.singlestore_version }}
          DATABASE: ${{ env.TEST_DB_DATABASE }}
        run: ./scripts/setup-cluster.sh

      - uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java || '21' }}
          cache: maven
          distribution: 'adopt'

      - name: Run Tests
        run: mvn clean test ${{ matrix.java == '8' && '-P java8' || '' }}
        env:
          TEST_DB_SERVER_CERT: ${{ format('{0}/scripts/ssl/server-cert.pem', github.workspace) }}
          TEST_DB_CLIENT_CERT: ${{ format('{0}/scripts/ssl/client-cert.pem', github.workspace) }}
          TEST_DB_CLIENT_KEY: ${{ format('{0}/scripts/ssl/client-key.pem', github.workspace) }}
